///
/// JAppleAuthCredential.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "AppleAuthCredential.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::appleauth {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "AppleAuthCredential" and the the Kotlin data class "AppleAuthCredential".
   */
  struct JAppleAuthCredential final: public jni::JavaClass<JAppleAuthCredential> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/appleauth/AppleAuthCredential;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct AppleAuthCredential by copying all values to C++.
     */
    [[maybe_unused]]
    AppleAuthCredential toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldUser = clazz->getField<jni::JString>("user");
      jni::local_ref<jni::JString> user = this->getFieldValue(fieldUser);
      static const auto fieldEmail = clazz->getField<jni::JString>("email");
      jni::local_ref<jni::JString> email = this->getFieldValue(fieldEmail);
      static const auto fieldFullName = clazz->getField<jni::JString>("fullName");
      jni::local_ref<jni::JString> fullName = this->getFieldValue(fieldFullName);
      static const auto fieldAuthorizationCode = clazz->getField<jni::JString>("authorizationCode");
      jni::local_ref<jni::JString> authorizationCode = this->getFieldValue(fieldAuthorizationCode);
      static const auto fieldIdentityToken = clazz->getField<jni::JString>("identityToken");
      jni::local_ref<jni::JString> identityToken = this->getFieldValue(fieldIdentityToken);
      static const auto fieldState = clazz->getField<jni::JString>("state");
      jni::local_ref<jni::JString> state = this->getFieldValue(fieldState);
      return AppleAuthCredential(
        user->toStdString(),
        email != nullptr ? std::make_optional(email->toStdString()) : std::nullopt,
        fullName != nullptr ? std::make_optional(fullName->toStdString()) : std::nullopt,
        authorizationCode != nullptr ? std::make_optional(authorizationCode->toStdString()) : std::nullopt,
        identityToken != nullptr ? std::make_optional(identityToken->toStdString()) : std::nullopt,
        state != nullptr ? std::make_optional(state->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JAppleAuthCredential::javaobject> fromCpp(const AppleAuthCredential& value) {
      return newInstance(
        jni::make_jstring(value.user),
        value.email.has_value() ? jni::make_jstring(value.email.value()) : nullptr,
        value.fullName.has_value() ? jni::make_jstring(value.fullName.value()) : nullptr,
        value.authorizationCode.has_value() ? jni::make_jstring(value.authorizationCode.value()) : nullptr,
        value.identityToken.has_value() ? jni::make_jstring(value.identityToken.value()) : nullptr,
        value.state.has_value() ? jni::make_jstring(value.state.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::appleauth
